Welcome to the Joyplot Edge Detection sketch!

This sketch is a fun and interactive way to experiment with image processing and edge detection using p5.js. By capturing video from your webcam and applying a series of filters, this sketch highlights the edges in the video and overlays a dynamic Joyplot visualization to create a stunning and engaging visual display.

To get started, simply run the sketch in your browser and grant permission for your webcam to be accessed. Once the sketch is running, you can move around and explore the space in front of your camera to see how the edge detection and Joyplot visualization respond to your movements.

The Joyplot overlay is created by averaging the brightness values of each row of pixels in the video frame and plotting these values as a series of curves that undulate up and down in response to your movements. This creates a dynamic and visually stunning display that adds a whole new level of interactivity and excitement to the edge detection process.

In addition to the Joyplot overlay, this sketch also draws a series of horizontal lines on top of the video, with each line colored randomly. These lines add another layer of visual interest and make the sketch even more visually engaging.

Finally, the sketch gradually fades out the black parts of the image over time, creating a persistent effect that makes the edges stand out more clearly. This effect adds a level of depth and interest to the sketch and makes it even more visually appealing.

Overall, the Joyplot Edge Detection sketch is a great way to experiment with image processing, edge detection, and visualization in a fun and interactive way. So why not give it a try and see what amazing and creative visual displays you can create?
Absolutely! All rights reserved. You are free to use this sketch for any purpose, including commercial use. You are also free to modify this sketch and use it in your own projects. All I ask is that you please give credit where credit is due and link back to this page if you use this sketch in your own projects. Thanks!
- Alphonce Ochieng